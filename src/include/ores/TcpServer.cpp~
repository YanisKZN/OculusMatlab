#include "Common.h"

using namespace boost::asio;
using namespace boost::asio::ip;


TcpServer::TcpServer(unsigned short port = 1700)
  : ipPort(port){
  tcp::acceptor acc(svc, tcp::endpoint(tcp::v4(), ipPort));
  acc.listen();
  acc.async_accept(socket, boost::bind(&TcpServer::Accept_Handler, this, placeholders::error));
boost::thread bt(boost::bind(&io_service::run, &svc));
}

void TcpServer::Write_Handler(const boost::system::error_code& ec,
				std::size_t bytes_transferred){
  if (!ec)
    {
      std::cout << "Just sent some %0.2f" << yawData << std::endl;
    }
}

void TcpServer::Accept_Handler(const boost::system::error_code& ec){
  if (!ec)
    {
      std::cout << "Entered Accept handler" << std::endl;
      async_write(socket, buffer("data"), boost::bind(&TcpServer::Write_Handler, this,
						  placeholders::error,
						  placeholders::bytes_transferred));
    }
}

void TcpServer::UpdateYaw(double data) {
  yawData = data;
}  

TcpServer::~TcpServer(){
  svc.stop();
}
